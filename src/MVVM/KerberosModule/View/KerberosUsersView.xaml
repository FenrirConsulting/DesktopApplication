<UserControl x:Class="IAMHeimdall.MVVM.View.KerberosUsersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:d1="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModel="clr-namespace:IAMHeimdall.MVVM.ViewModel"
             xmlns:custom="clr-namespace:IAMHeimdall.Resources"
             xmlns:local="clr-namespace:IAMHeimdall.Resources.Behaviors"
             FontFamily="/IAMHeimdall;component/Resources/Fonts/#Lato"
             mc:Ignorable="d1 d"
             d:DesignHeight="600"
             d:DesignWidth="1200">
    <UserControl.DataContext>
        <viewModel:KerberosUsersViewModel>
        </viewModel:KerberosUsersViewModel>
    </UserControl.DataContext>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:CallMethodAction TargetObject="{Binding}" MethodName="OnLoad" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
    </UserControl.Resources>
    <Border         Margin="0,0,0,0"
                    BorderThickness="0">
        <Border.Background>
            <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                <GradientStop Offset="0.0" Color="{StaticResource ResourceKey=JuteBrownColorDarker}" />
                <GradientStop Offset="0.5" Color="{StaticResource ResourceKey=JuteBrownLighterColor}" />
                <GradientStop Offset="1.0" Color="{StaticResource ResourceKey=JuteBrownColor}" />
            </LinearGradientBrush>
        </Border.Background>
        <Grid x:Name="MainGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="300" />
            </Grid.ColumnDefinitions>

            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="90" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="35" />
                </Grid.RowDefinitions>
                <Border BorderBrush="{StaticResource FossilGrey}"
                                    BorderThickness="1"
                                    Grid.Row="0" />
                <Grid Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="5*" />
                        <RowDefinition Height="5*" />
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0">
                        <Label Content="Users"
                       Width="477"
                       Height="50"
                       HorizontalAlignment="Left"
                       VerticalAlignment="Center"
                       Style="{StaticResource HeaderLabelStyle}"
                       Foreground="{StaticResource StoneWhite}"
                        FontWeight="Bold" />
                        <Button x:Name="AddRecord"
                        Content="Add User"
                        Style="{StaticResource MenuButtonStyleAlt}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Width="100" Height="30"
                        IsEnabled="{Binding UnixPermissionCheck}"
                        Command="{Binding AddRecordCommand}"
                        Margin="5,5,0,2"
                        FontWeight="Bold"
                        DockPanel.Dock="Right" />
                    </Grid>

                    <Grid Grid.Row="1">
                        <DockPanel>
                            <TextBox x:Name="searchBox"
                         Width="200"
                         Height="40"
                         VerticalContentAlignment="Center"
                         HorizontalAlignment="Left"
                         Style="{StaticResource TextBoxStyle}"
                         VerticalAlignment="Bottom"
                         Margin="2,0,0,4"
                         Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="GotFocus">
                                        <i:InvokeCommandAction Command="{Binding ClearSearch}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <TextBox.InputBindings>
                                    <KeyBinding Key="Enter"
                                    Command="{Binding SearchEnterKey}" />
                                </TextBox.InputBindings>
                            </TextBox>
                            <ComboBox x:Name="criteriaBox"
                          Style="{StaticResource ComboBoxTheme}"
                          Margin="5,0,0,5"
                          VerticalAlignment="Bottom"
                          HorizontalAlignment="Left"
                          Height="40"
                          Width="141"
                          SelectedIndex="0"
                          ItemsSource="{Binding SearchTerms}"
                          DisplayMemberPath="SearchTerm"
                          SelectedItem="{Binding SelectedTerm}">
                            </ComboBox>
                            <Button x:Name="searchButton"
                        ToolTip="Search"
                        BorderThickness="0"
                        WindowChrome.IsHitTestVisibleInChrome="True"
                        Width="40"
                        RenderTransformOrigin="-0.736,-1.222"
                        Style="{StaticResource TitleButtonTheme}"
                        Margin="5,0,0,5"
                        HorizontalAlignment="Left"
                        Height="40"
                        VerticalAlignment="Bottom"
                        Command="{Binding SearchQuery}">
                                <Button.Background>
                                    <ImageBrush ImageSource="/IAMHeimdall;component/Resources/Images/SearchResults.png" />
                                </Button.Background>
                            </Button>
                            <Button x:Name="clearButton"
                        BorderThickness="0"
                        ToolTip="Clear Results"
                        WindowChrome.IsHitTestVisibleInChrome="True"
                        Width="40"
                        Height="40"
                        RenderTransformOrigin="-0.736,-1.222"
                        Style="{StaticResource TitleButtonTheme}"
                        Margin="10,0,0,5"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Bottom"
                        Command="{Binding ClearQuery}">
                                <Button.Background>
                                    <ImageBrush ImageSource="/IAMHeimdall;component/Resources/Images/Cancel_16x.png" />
                                </Button.Background>
                            </Button>
                            <StackPanel
                        Height="50"
                        VerticalAlignment="Bottom">
                                <Label Content="No Results Found"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Top"
                       Style="{StaticResource LabelStyle}"
                       Foreground="{StaticResource VikingRed}"
                        Visibility="{Binding Path=NoFoundResults, Converter={StaticResource BoolToVis}}"
                       FontWeight="Bold"
                       Margin="0" />
                                <Label Content="Double-Click to Update Records"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Bottom"
                       Style="{StaticResource LabelStyle}"
                       Foreground="{StaticResource StoneWhite}"
                       FontWeight="Bold" Margin="0" />
                            </StackPanel>
                            <Button x:Name="LoadTable"
                        Content="Reload DB"
                        Style="{StaticResource MenuButtonStyleAlt}"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Width="100" Height="30"
                        Command="{Binding LoadTable}"
                        Margin="5,0,0,5"
                        FontWeight="Bold"
                        DockPanel.Dock="Right" />
                            <Button x:Name="excelButton"
                        BorderThickness="0"
                        ToolTip="Excel Export"
                        WindowChrome.IsHitTestVisibleInChrome="True"
                        Width="40"
                        RenderTransformOrigin="-0.736,-1.222"
                        Style="{StaticResource TitleButtonTheme}"
                        Margin="10,0,10,5"
                        Height="40"
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Right"
                        Foreground="Transparent"
                        local:ContextMenuLeftClickBehavior.IsLeftClickEnabled="True">
                                <Button.Background>
                                    <ImageBrush ImageSource="/IAMHeimdall;component/Resources/Images/ExportToExcel_16x.png" />
                                </Button.Background>
                                <Button.ContextMenu>
                                    <ContextMenu
                                      Style="{StaticResource ContextMenuStyle}">
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column1,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column1IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column2,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column2IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column3,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column3IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column4,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column4IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column5,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column5IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column6,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column6IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column7,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column7IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column8,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column8IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column9,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column9IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="Export Complete Table"
                                      IsChecked="{Binding ExportColumnList.ExportEverything,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      FontWeight="Heavy"
                                      Header="Export Table"
                                      Command="{Binding ExcelExport}" />
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </Button>
                            <Button x:Name="htmlButton"
                        BorderThickness="0"
                        ToolTip="HTML Export"
                        WindowChrome.IsHitTestVisibleInChrome="True"
                        Width="40"
                        RenderTransformOrigin="-0.736,-1.222"
                        Style="{StaticResource TitleButtonTheme}"
                        Margin="10,0,10,5"
                        Height="40"
                        VerticalAlignment="Bottom"
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Right"
                        local:ContextMenuLeftClickBehavior.IsLeftClickEnabled="True">
                                <Button.Background>
                                    <ImageBrush ImageSource="/IAMHeimdall;component/Resources/Images/HtmlExport.png" />
                                </Button.Background>
                                <Button.ContextMenu>
                                    <ContextMenu
                                      Style="{StaticResource ContextMenuStyle}">
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column1,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column1IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column2,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column2IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column3,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column3IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column4,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column4IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column5,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column5IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column6,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column6IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column7,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column7IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column8,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column8IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="{Binding ExportColumnList.Column9,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsChecked="{Binding ExportColumnList.Column9IsChecked,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      StaysOpenOnClick="True"
                                      Header="Export Complete Table"
                                      IsChecked="{Binding ExportColumnList.ExportEverything,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                                      IsCheckable="True" />
                                        <MenuItem
                                      FontWeight="Heavy"
                                      Header="Export Table"
                                      Command="{Binding HTMLExport}" />
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </Button>
                        </DockPanel>
                    </Grid>
                </Grid>

                <Grid Grid.Row="1">
                    <custom:LoadingSpinner
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                IsLoading="{Binding IsLoadBool}"
                Panel.ZIndex="1"
                Thickness="5"
                Cap="Round"
                Diameter="100" />
                    <DataGrid x:Name="KerberosGroupsDataGrid"
                      AutoGenerateColumns="False"
                      Panel.ZIndex="0"
                      ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                      HorizontalAlignment="Stretch"
                      Margin="0" Grid.Row="1"
                      Style="{StaticResource ThemedDataGrid}"
                      BorderBrush="{x:Null}"
                      ItemsSource="{Binding DisplayView}"
                      IsReadOnly="True"
                      SelectionMode="Single"
                      SelectionUnit="Cell"
                      CurrentCell="{Binding CellInfo, Mode=TwoWay}">
                        <DataGrid.InputBindings>
                            <MouseBinding MouseAction="LeftDoubleClick"
                                  Command="{Binding RecordSelect}" CommandParameter="Users Update" />
                        </DataGrid.InputBindings>
                        <DataGrid.ContextMenu>
                            <ContextMenu Style="{StaticResource ContextMenuStyle}">
                                <MenuItem Header="Copy" Command="Copy"></MenuItem>
                                <MenuItem Header="Delete" Command="{Binding DeleteClickCommand}" IsEnabled="{Binding UnixPermissionCheck}"></MenuItem>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="UID"
                                        Binding="{Binding iamhku_uid}"
                                        MinWidth="90"
                                        MaxWidth="120" />
                            <DataGridTextColumn Header="Logon ID"
                                        Binding="{Binding iamhku_logid}"
                                        MinWidth="90"
                                        MaxWidth="120" />
                            <DataGridTextColumn Header="Emp #"
                                        Binding="{Binding iamhku_empid}"
                                        MinWidth="90"
                                        MaxWidth="120" />
                            <DataGridTextColumn Header="ADID"
                                        Binding="{Binding iamhku_adid}"
                                        MinWidth="90"
                                        MaxWidth="120" />
                            <DataGridTextColumn Header="Name"
                                        Binding="{Binding iamhku_name}"
                                        MinWidth="120"
                                        MaxWidth="140" />
                            <DataGridTextColumn Header="Comments"
                                        Binding="{Binding iamhku_comments}"
                                        MinWidth="140"
                                        MaxWidth="200" />
                            <DataGridTextColumn Header="Servers"
                                        Binding="{Binding iamhku_servers}"
                                        MinWidth="140" />
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>

                <DockPanel Grid.Row="2"
                   x:Name="pagePanel"
                   VerticalAlignment="Bottom"
                   Margin="0"
                   Height="35"
                   DataContext="{Binding}"
                   Background="{StaticResource DeepOnyx}">
                    <DockPanel HorizontalAlignment="Left"
                       VerticalAlignment="Bottom"
                       Margin="0,0,0,5">
                        <TextBlock Text="Total Records: "
                           Style="{StaticResource PageLabels}"
                           HorizontalAlignment="Right" />
                        <TextBlock Text="{Binding Pagination.TotalItems, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}"
                           Style="{StaticResource PageLabels}"
                           HorizontalAlignment="Right"
                           Foreground="{StaticResource NeonBlue}" />
                        <TextBlock Text="|"
                           Style="{StaticResource PageLabels}" />
                        <TextBlock Text="Displayed Records"
                           Style="{StaticResource PageLabels}"
                           HorizontalAlignment="Right" />
                        <TextBox x:Name="DisplayedRecordsTextBox"
                         Text="{Binding Pagination.ItemsPerPage, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}"
                         Style="{StaticResource SmallTextBox}">
                            <TextBox.InputBindings>
                                <KeyBinding Key="Enter"
                                    Command="{Binding EnterCalculation}"
                                    CommandParameter="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}" />
                            </TextBox.InputBindings>
                        </TextBox>
                    </DockPanel>
                    <DockPanel HorizontalAlignment="Right"
                       VerticalAlignment="Bottom"
                       DockPanel.Dock="Right"
                       Height="35"
                       Margin="0,0,5,0">
                        <TextBlock Text="Page"
                           Style="{StaticResource PageLabels}" />
                        <TextBlock Text="{Binding Pagination.CurrentPage,  NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}"
                           Style="{StaticResource PageLabels}"
                           Foreground="{StaticResource NeonBlue}" />
                        <TextBlock Text="of"
                           Style="{StaticResource PageLabels}" />
                        <TextBlock Text="{Binding Pagination.TotalPages, NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}"
                           Style="{StaticResource PageLabels}"
                           Foreground="{StaticResource NeonBlue}" />
                        <TextBlock Text="|"
                           Style="{StaticResource PageLabels}" />
                        <TextBlock Text="Go to : "
                           Style="{StaticResource PageLabels}"
                           HorizontalAlignment="Center" />
                        <TextBox   Text="{Binding Pagination.CurrentPage,  NotifyOnSourceUpdated=True,UpdateSourceTrigger=PropertyChanged}"
                           Style="{StaticResource SmallTextBox}"
                           Margin="5,0,0,0" />
                        <Button x:Name="NextPage"
                        Content="Next"
                        Style="{StaticResource ButtonStyle}"
                        Width="100" Height="22"
                        Margin="5,0,0,0"
                        FontWeight="Bold" DockPanel.Dock="Right"
                        Command="{Binding ChangePage}"
                        CommandParameter="1" />
                        <Button x:Name="PreviousPage"
                        Content="Previous"
                        Style="{StaticResource ButtonStyle}"
                        Width="100" Height="22"
                        Margin="5,0,0,0"
                        FontWeight="Bold"
                        DockPanel.Dock="Right"
                        Command="{Binding ChangePage}"
                        CommandParameter="0" />
                    </DockPanel>
                </DockPanel>
            </Grid>
            <Grid Grid.Column="1">
                <Border BorderBrush="{StaticResource FossilGrey}"
                                    BorderThickness="1"
                                    Grid.Row="0" />
                <ContentControl x:Name="MainContentControl"
                            Content="{Binding SelectedViewModel}"
                            Margin="0,0,0,0" />
            </Grid>
        </Grid>
    </Border>
</UserControl>